use('users');
db.customers.aggregate([
	{
		$match: { 'address.country': /^(u|g)/i },
	},
	{
		$lookup: {
			from: 'roles',
			localField: 'roleId',
			foreignField: '_id',
			as: 'customerRole',
		},
	},
	{
		$project: {
			_id: 0,
			firstName: 1,
			lastName: 1,
			customerRole: 1
		},
	},
]);
/* db.customers.updateMany(
	{ 'address.country': 'Ukraine' },
	{ $set: { roleId: ObjectId('65462d3686be465cf5fb2880') } }
);
db.customers.updateMany(
	{ 'address.country': 'Great Britain' },
	{ $set: { roleId: ObjectId('65462d3686be465cf5fb2881') } }
);
db.customers.updateMany(
	{ 'address.country': 'USA' },
	{ $set: { roleId: ObjectId('65462d3686be465cf5fb2882') } }
); */
/* db.roles.insertMany([
  {type: 'admin'},
  {type: 'moderator'},
  {type: 'user'},
]) */
/* // distinct
db.customers.distinct('address.city').sort(() => -1) */
/* // delete
db.customers.deleteMany(
	{ prog_langs: {$in: ['Fortran', 'Algol67']}},
); */
// update
/* db.customers.updateMany(
	{ 'address.country': 'Great Britain' },
	{$addToSet: {prog_langs: {$each: ['Scala', 'JS']}}}
); */
/* db.customers.updateMany(
	{firstName: 'Nickolas'},
	{$unset: {middleName: 0}}
); */
/* db.customers.updateMany(
	{firstName: 'Nickolas'},
	{$set: {middleName: 'Petrovich'}}
); */
/* db.customers.updateMany(
	{},
	{ $rename: {'p_langs': 'prog_langs'}}
); */
// Create and find
/* db.customers.find(
	{ p_langs: { $all: ['Python', 'JS'] } },
	// { firstName: {$regex: /^J/ }}
	{ lastName: 1, _id: 0, 'address.country': 1, p_langs: 1 }
); */
/* db.customers.find(
	{ $or: [
    {age: {$gt: 40}},
    {'address.country': 'Great Britain'}
  ] },
	// { firstName: {$regex: /^J/ }}
	{ firstName: 1, lastName: 1, _id: 0, 'address.country': 1, age: 1}
); */
/* db.customers
	.find(
		{ 'address.zipcode': { $type: ['number', 'string'] } },
		{ firstName: 1, lastName: 1, _id: 0, 'address.zipcode': 1 }
	).pretty() */
	
/* db.customers
	.find(
		{ 'address.zipcode': { $type: ['number', 'string'] } },
		{ firstName: 1, lastName: 1, _id: 0, 'address.zipcode': 1 }
	)
	.sort({'address.zipcode': 1}).limit(3).skip(2) */
/* db.customers.find(
	{ 'address.app': {$exists: 0}},
	{ firstName: 1, lastName: 1, _id: 0, 'address.zipcode': 1 }
); */
/* db.customers.find(
	{ 'address.zipcode': {$not: { $gt: 3000 }} },
	{ firstName: 1, lastName: 1, _id: 0, 'address.zipcode': 1 }
); */
/* db.customers.find(
	{
		$nor: [
			{ 'address.country': 'Great Britain' },
			{ 'address.city': 'London' },
		],
	},
	{ firstName: 1, lastName: 1, _id: 0, age: 1 }
); */
/* db.customers.find(
	{age: {$in: [30, 40]}},
	{ firstName: 1, lastName: 1, _id: 0, age: 1 }
); */
/* db.customers.find(
	{ p_langs: {$all: ['Python', 'Java']} },
	{ firstName: 1, lastName: 1, _id: 0 }
); */
/* db.customers.find(
  { age: 40 }, 
  { firstName: 1, lastName: 1, _id: 0}
  ); */
// SELECT * FROM customers WHERE age=40
// SELECT firstName, lastName FROM customers WHERE age=40
/* use('users');
const customers = [
	{
		firstName: 'Nick',
		lastName: 'Myson',
		age: 50,
		address: {
			country: 'USA',
			city: 'New York',
			street: 'Wholt Street',
			building: '722',
			app: '250',
			zipcode: 10020,
		},
		p_langs: ['JS', 'C#', 'Java'],
	},
	{
		firstName: 'Nick',
		lastName: 'Myson',
		age: 50,
		address: {
			country: 'USA',
			city: 'New York',
			street: 'Wholt Street',
			building: '722',
			app: '250',
			zipcode: 10020,
		},
		p_langs: ['JS', 'C#', 'Java'],
	},
	{
		firstName: 'Harry',
		lastName: 'Porter',
		age: 45,
		address: {
			country: 'Great Britain',
			city: 'Manchester',
			street: 'Robin Hood',
			building: '320d',
			zipcode: 1605,
			app: '120',
		},
		p_langs: ['JS', 'Python', 'Java'],
	},
	{
		firstName: 'Ken',
		lastName: 'Hensly',
		age: 70,
		address: {
			country: 'Great Britain',
			city: 'London',
			street: 'Backer Street',
			zipcode: 5208,
		},
		p_langs: ['JS', 'Kotlin', 'SQL'],
	},
	{
		firstName: 'Mike',
		lastName: 'Tyson',
		age: 50,
		address: {
			country: 'USA',
			city: 'Washington',
			street: 'Wholt Street',
			building: '20 b',
			app: '120',
			zipcode: 98002,
		},
		p_langs: ['HTML', 'CSS', 'XML'],
	},
	{
		firstName: 'Michael',
		lastName: 'Jordan',
		age: 45,
		address: {
			country: 'USA',
			city: 'Chicago',
			street: 'Rusvelt Teodor',
			building: '20 b',
			app: '120',
			zipcode: 60176,
		},
		p_langs: ['Scala', 'Go', 'Ruby'],
	},
	{
		firstName: 'Paul',
		lastName: 'MacCartney',
		age: 70,
		address: {
			country: 'Great Britain',
			city: 'London',
			street: 'Trafalgar squear',
		},
		p_langs: ['Ruby', 'Python', 'Pascal'],
	},
	{
		firstName: 'Jhon',
		lastName: 'Doe',
		age: 30,
		address: {
			country: 'Ukraine',
			city: 'Dnipro',
			street: 'Yavornitskogo',
			building: '18b',
			app: '120',
			zipcode: 49130,
		},
		p_langs: ['JS', 'Python', 'Algol67'],
	},
	{
		firstName: 'Jane',
		lastName: 'Smith',
		age: 25,
		address: {
			country: 'Ukraine',
			city: 'Zaporizhzhia',
			street: 'Svobody',
			building: '20 b',
			app: '120',
			zipcode: 69061,
		},
		p_langs: ['CoffeeScript', 'Java', 'Fortran'],
	},
	{
		firstName: 'Benya',
		lastName: 'Crick',
		age: 40,
		address: {
			country: 'Ukraine',
			city: 'Odessa',
			street: 'Deribasovskaya',
			building: '20 b',
			app: '120',
			zipcode: 65125,
		},
		p_langs: ['Python', 'Assembler', 'Java'],
	},
];
db.customers.insertMany(customers);

use('users');
const customersTwo = [
  {
		firstName: 'Jhon',
		lastName: 'Doe',
		age: 30,
		address: {
			country: 'Ukraine',
			city: 'Dnipro',
			street: 'Yavornitskogo',
			building: '18b',
			app: '120',
			zipcode: 49130,
		},
		prog_langs: ['JS', 'Python', 'Algol67'],
	},
	{
		firstName: 'Jane',
		lastName: 'Smith',
		age: 25,
		address: {
			country: 'Ukraine',
			city: 'Zaporizhzhia',
			street: 'Svobody',
			building: '20 b',
			app: '120',
			zipcode: 69061,
		},
		prog_langs: ['CoffeeScript', 'Java', 'Fortran'],
	},
]
db.customers.insertMany(customersTwo); */